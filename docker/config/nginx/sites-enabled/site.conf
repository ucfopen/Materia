server {
	listen *:80;
	server_name default;

	root /var/www/html/staticfiles;
	index index.html;

	location / {
		try_files $uri @handler;
		expires 30d;
	}

	location @handler {
		uwsgi_pass python:8001;

		uwsgi_param QUERY_STRING   $query_string;
		uwsgi_param REQUEST_METHOD $request_method;
		uwsgi_param CONTENT_TYPE   $content_type;
		uwsgi_param CONTENT_LENGTH $content_length;

		uwsgi_param REQUEST_URI     $request_uri;
		uwsgi_param PATH_INFO       $document_uri;
		uwsgi_param DOCUMENT_ROOT   $document_root;
		uwsgi_param SERVER_PROTOCOL $server_protocol;
		uwsgi_param HTTPS           $https if_not_empty;

		uwsgi_param REMOTE_ADDR  $remote_addr;
		uwsgi_param REMOTE_PORT  $remote_port;
		uwsgi_param SERVER_PORT  $server_port;
		uwsgi_param SERVER_NAME  $server_name;
		uwsgi_param UWSGI_SCHEME http;

		uwsgi_modifier1 30;

		uwsgi_read_timeout    300;
		uwsgi_send_timeout    300;
		uwsgi_connect_timeout 300;

		proxy_redirect off;
		proxy_set_header Host            $host;
		proxy_set_header X-Real-IP       $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	}

	location /static/img {
	    try_files /var/www/html/staticfiles/theme/img /var/www/html/staticfiles/img;
        autoindex on;
	}

	location /static {
		alias /var/www/html/staticfiles;
		autoindex on;
		# expires 1d;
	}

    # Temp? rule to prevent django's 404 page from appearing on static assets
    # Firefox freaks out when its expecting a .js file and it gets a django's html instead
	location /widget/ {
	    try_files $uri =404;
	}

	# In the dev environment, js and css assets are emitted to public/dist instead of public/
    # However, server pages will expect them to be in public/js or public/css instead
    # Redirect requests for these assets to public/dist
    location ~* ^\/(?:js|css)\/.+\.(?:js|css)$ {
        proxy_pass http://$server_addr/dist$uri;
    }
}
