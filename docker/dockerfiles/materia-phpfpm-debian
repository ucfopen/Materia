FROM php:7.4.7-fpm-buster
MAINTAINER UCF/Open_

ARG PHP_EXT="bcmath gd pdo_mysql xml zip"
ARG PHP_MEMCACHED_VERSION="v3.1.5"
ARG COMPOSER_VERSION="1.10.0"
ARG COMPOSER_INSTALLER_URL="https://raw.githubusercontent.com/composer/getcomposer.org/d2c7283f9a7df2db2ab64097a047aae780b8f6b7/web/installer"
ARG COMPOSER_INSTALLER_SHA="e0012edf3e80b6978849f5eff0d4b4e4c79ff1609dd1e613307e16318854d24ae64f26d17af3ef0bf7cfb710ca74755a"
ARG NODE_VERSION="12.14.1"
ARG NODE_CHECKSUM_X64="07cfcaa0aa9d0fcb6e99725408d9e0b07be03b844701588e3ab5dbc395b98e1b"
ARG NODE_CHECKSUM_ARM64="6cd28a5e6340f596aec8dbfd6720f444f011e6b9018622290a60dbd17f9baff6"

# os packages needed for php extensions
ARG BUILD_PACKAGES="locales libpng-dev libjpeg-dev libmcrypt-dev libmemcached-dev libpng-dev libxml2-dev libonig-dev libzip-dev git zip"
ARG PURGE_PACKAGES="libpng-dev libjpeg-dev libmcrypt-dev libmemcached-dev libpng-dev libxml2-dev libonig-dev libzip-dev"
ARG PURGE_FILES="/var/lib/apt/lists/* /usr/src/php /usr/include /usr/local/include /usr/share/doc /usr/share/doc-base /var/www/html/php-memcached"

RUN apt-get update \
	&& apt-get install --yes --no-install-recommends $BUILD_PACKAGES \
	# ======== PHP CONFIGURE GD
	&& docker-php-ext-configure gd --with-jpeg \
	# ======== PHP XDEBUG
	# Disabled by default
	# && pecl install xdebug \
	# && docker-php-ext-enable xdebug \
	# ======== PHP EXTENSIONS
	&& docker-php-ext-install $PHP_EXT \
	# ======== PHP-MEMCACHED
	&& git clone -b $PHP_MEMCACHED_VERSION https://github.com/php-memcached-dev/php-memcached.git \
	&& cd php-memcached \
	&& phpize \
	&& ./configure \
	&& make \
	&& make install \
	&& docker-php-ext-enable memcached \
	# ======== PHP COMPOSER
	&& php -r "copy('$COMPOSER_INSTALLER_URL', 'composer-setup.php');" \
	&& php -r "if (hash_file('sha384', 'composer-setup.php') === '$COMPOSER_INSTALLER_SHA') { echo 'COMPOSER VERIFIED'; } else { echo 'COMPOSER INVALID'; exit(1); } echo PHP_EOL;" \
	&& php composer-setup.php --install-dir=/usr/local/bin --filename=composer --version=$COMPOSER_VERSION \
	&& rm -f composer-setup.php \
	# ======== NODE JS
	&& ARCH="$(dpkg --print-architecture)" \
	&& curl https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz --output /tmp/node.tar.xz --silent \
	&& php -r "if (in_array(hash_file('sha256', '/tmp/node.tar.xz'), ['$NODE_CHECKSUM_X64','$NODE_CHECKSUM_ARM64'])) { echo 'NODE VERIFIED'; } else { echo 'NODE INVALID'; exit(1); } echo PHP_EOL;" \
	&& cd /usr \
	&& tar --strip-components 1 -xf /tmp/node.tar.xz \
	&& rm -f /tmp/node.tar.xz \
	# ======== CLEANUP
	&& apt-get remove --purge --yes $PURGE_PACKAGES \
	&& apt clean \
	&& rm -rf $PURGE_FILES

RUN npm install --global yarn

# hack to let php write to the shared disk with boot2docker shares
# files shared from host into a container appear to use a user on host with UID 1000
# looks like this container not only doesnt have a user at 1000, but the www-data user cant write to these files
# so, this changes www-data's uid to 1000
# RUN usermod -u 1000 www-data
RUN sed -i "s/^www-data:x:[0-9]*/www-data:x:1000/" /etc/passwd

# Set the locale
# based on http://jaredmarkell.com/docker-and-locales/
RUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \
    locale-gen
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8

# add script that helps us wait for other containers
COPY wait-for-it.sh /wait-for-it.sh
RUN chmod +x /wait-for-it.sh
